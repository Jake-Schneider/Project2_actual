<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function (spModal) { 
 //Including spModal service
 var c = this;
 var shared = {}; //This is an empty array we can add to and share with the modal and embedded widget.
 c.onBrowsePets = function(size){
 //This function is called by a button in the HTML
	 
 shared.currentPet = c.data.currentPet; //We store the currentPet data as an object in 'shared' so that it is available to the embedded widget.

spModal.open({
 //spModal.open will open a modal, and we'll pass it the following parameters
 size: size,
 title: 'Adopt a Portal Pet!',
 widget: 'afd4dee7db0cc010915861ca0b9619d2', //Insert sys_id of the embedded widget - "Pet Selection"
 buttons: [
 {label:'${Adopt}', primary: true}
 ],
 shared: shared //We make the 'shared' array available to modal's embedded widget
 }).then(function() {
 //This function is triggered by submitting/closing the modal.
 c.data.selectedPet = shared.selectedPet; //The selected pet is shared with this widget via the 'share' object
 c.data.action = "adoptme";
	c.server.update(); //Send the updated data object to the server script
 });
	 
}
 
c.onLostPet = function(size){
 //This function is called by a button in the HTML
	 
 shared.currentPet = c.data.currentPet; //We store the currentPet data as an object in 'shared' so that it is available to the embedded widget.

spModal.open({
 //spModal.open will open a modal, and we'll pass it the following parameters
 size: size,
 title: 'Lost Pets!',
 widget: '1fe15f63dbccc010915861ca0b96198c', //Insert sys_id of the embedded widget - "Pet Selection"
 buttons: [
 {label:'${Adopt}', primary: true}
 ],
 shared: shared //We make the 'shared' array available to modal's embedded widget
 }).then(function() {
 //This function is triggered by submitting/closing the modal.
 c.data.selectedPet = shared.selectedPet; //The selected pet is shared with this widget via the 'share' object
 c.data.action = "lostPet";
	c.server.update(); //Send the updated data object to the server script
 });
	 
} 

c.onAllPet = function(size){
 //This function is called by a button in the HTML
	 
 shared.currentPet = c.data.currentPet; //We store the currentPet data as an object in 'shared' so that it is available to the embedded widget.

spModal.open({
 //spModal.open will open a modal, and we'll pass it the following parameters
 size: size,
 title: 'ALL Pets',
 widget: 'd1895be7dbccc010915861ca0b9619a0', //Insert sys_id of the embedded widget - "Pet Selection"
 buttons: [
 {label:'${Adopt}', primary: true}
 ],
 shared: shared //We make the 'shared' array available to modal's embedded widget
 }).then(function() {
 //This function is triggered by submitting/closing the modal.
 c.data.selectedPet = shared.selectedPet; //The selected pet is shared with this widget via the 'share' object
 c.data.action = "lostPet";
	c.server.update(); //Send the updated data object to the server script
 });
	 
} 
 
 
 
}]]></client_script>
        <controller_as>c</controller_as>
        <css>
button.adopt {
 position: relative;
 padding: 20px 20px;
 margin-bottom: 20px;
 font-size: 1.5em;
 width: 100%;
}

.log_pet{
  width: 50px;
  height: 50px;
  float: left;
  padding-left: 5px;
  border-raduis: 10px;
}
.pet_label{
  text-align: center;
}




</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>pet_adoption</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Pet Adoption</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	//Check the Pet Adoption table to populate the currentPet object if there is an existing adopted pet
	/*var petsGR = new GlideRecord('x_393642_project_2_pets');
	petsGR.query();
	
	if(petsGR.next()) {
		data.currentPet = {
			//build the currentPet object
			 name: petsGR.pet_name.toString(),
			 photo: petsGR.pets_image.getDisplayValue().toString(),
			 type: petsGR.type_pet.toString(),
			 pet_id: petsGR.pet_id.toString(),
			 sys_id: petsGR.sys_id.toString()
		};
	}*/
	
if(input && (input.action == "adoptme" || input.action =="lostPet") ) {
     //If there is no current Pet,make a new entry in the u_pet_adoptions table
     var newPet = new GlideRecord('x_393642_project_2_pets');
		newPet.get(input.selectedPet.sys_id);
		newPet.u_full_name = gs.getUserDisplayName();
    newPet.adopt_status = "adopted";
    newPet.update();
   
}


	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-28 18:29:38</sys_created_on>
        <sys_id>9baf8e27db0cc010915861ca0b9619a7</sys_id>
        <sys_mod_count>69</sys_mod_count>
        <sys_name>Pet Adoption</sys_name>
        <sys_package display_value="Project 2" source="x_393642_project_2">13a33988db440010ac38dde748961923</sys_package>
        <sys_policy/>
        <sys_scope display_value="Project 2">13a33988db440010ac38dde748961923</sys_scope>
        <sys_update_name>sp_widget_9baf8e27db0cc010915861ca0b9619a7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-29 01:47:41</sys_updated_on>
        <template><![CDATA[<div class="petButton">
 <button ng-click="c.onBrowsePets('lg')" class="adopt btn btn-primary">
 <img src="adopt_dog.png"  class="log_pet"/> <span class="pet_label">${Adopt a Pet}</span>
 </button>
</div>


<div class="petButton">
  
 <button ng-click="c.onLostPet('lg')" class="adopt btn btn-success">
<img src="adopt_dog.png"  class="log_pet"/> <span class="pet_label">${Lost a Pet}</span>
 </button>
</div>

<div class="petButton">
 <button ng-click="c.onAllPet('lg')" class="adopt btn btn-info">
 <img src="adopt_dog.png"  class="log_pet"/> <span class="pet_label">${All Pets}</span>
 </button>
</div>


<!--House for the adopted pet to live in
<div class="pet-house-outer-container" ng-if="data.currentPet">
 <div class="pet-house-container">
 <div class="pet" style="background: url('{{data.currentPet.photo}}') center center;background-size: cover;"></div>
 <img class="pet-house" ng-src="pet-house.pngx" />
 <div class="pet-name">
 {{data.currentPet.name}}
 </div>

 <a class="settings" href="javascript:void(0)" ng-click="c.onBrowsePets('lg')">
 <i class="fa fa-cog"></i>
 </a>
 </div>
</div>-->

]]></template>
    </sp_widget>
</record_update>
